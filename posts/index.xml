<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 阿飞的工作日志</title><link>https://example.com/posts/</link><description>Recent content in Posts on 阿飞的工作日志</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 05 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Go教程-Day1</title><link>https://example.com/posts/go-day-1/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://example.com/posts/go-day-1/</guid><description>变量 请注意阅读代码中的注释
// main包 package main // 导入 fmt包 import &amp;quot;fmt&amp;quot; // 主函数 func main() { // int变量声明 默认值0填充 var money int // 用fmt包进行输出 fmt.Println(&amp;quot;how much money you have left : &amp;quot;, money) // 输出 how much money you have left : 0 // int变量声明 并赋值 var money2 int = 1000 // 用fmt包进行输出 fmt.Println(&amp;quot;how much money you have left : &amp;quot;, money2) // 输出 how much money you have left : 1000 /** *自动推断值类型 */ var money3 = 9999 // 简短自动推断类型 此用法最多 money4 := 8888 fmt.</description></item><item><title>Go教程-Day2</title><link>https://example.com/posts/go-day-2/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://example.com/posts/go-day-2/</guid><description>断言 package main import &amp;quot;fmt&amp;quot; //自定义类型 type sw interface { } func main() { // 给类型赋值 var s sw = 0x0D // 断言 fmt.Println(s.(int)) } if-else package main import ( &amp;quot;errors&amp;quot; &amp;quot;fmt&amp;quot; ) func main() { var d int64 = 1200 fmt.Println(d) if d%10 != 1 { fmt.Println(&amp;quot;a&amp;quot;) } else { fmt.Println(&amp;quot;b&amp;quot;) } // i32 测试 var i32 int32 = 1200 str, err := test(i32) fmt.Println(str) // 空字符串 if err !</description></item></channel></rss>